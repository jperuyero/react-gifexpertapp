{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hook/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","proptTypes","ProptTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","div","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aAsB3BZ,EAAYe,WAAa,CACvBd,cAAee,IAAWC,KAAKC,Y,mCC5BlBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAKXA,EAAKC,OALM,uBAInBC,EAJmB,EAInBA,KAGIC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCDTO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEjC,OACE,sBAAKc,KAAG,EAACC,UAAY,yCAArB,UACE,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCHGQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECCT,SAACA,GAAc,IAAD,EAGdlB,mBAAS,CACjCyB,KAAM,GACNc,SAAS,IAL6B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAmBxC,OAXAC,qBAAU,WACRzB,EAAQC,GACLyB,MAAK,SAAAC,GACJH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGd,CAACrB,IAGGsB,EDlBsBK,CAAa3B,GAAhCa,EAFyB,EAE9BN,KAAac,EAFiB,EAEjBA,QAEpB,OACE,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAElDqB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACKJ,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEbRiB,EAAe,WAAO,IAAD,EAEI9C,mBAAS,CAAC,cAFd,mBAEzB+C,EAFyB,KAEbhD,EAFa,KAIhC,OACE,qCACC,8CACA,cAAE,EAAF,CAAcA,cAAeA,IAC7B,uBAID,6BAEIgD,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAE,EAAF,CAEAA,SAAUA,GADLA,Y,MCff8B,IAASC,OACL,cAAE,EAAF,IACFC,SAASC,eAAe,W","file":"static/js/main.2fe92b7d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport ProptTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (inputValue.trim().length > 2) {\r\n        setCategories(cats => [inputValue,...cats])\r\n        setInputValue('')\r\n      }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.proptTypes = {\r\n  setCategories: ProptTypes.func.isRequired\r\n}","\r\n\r\n\r\n  export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=dMGrjsHtHdbx6BTlQwasQEP12kbI7oEs`\r\n    const resp = await fetch(url)\r\n    const {\r\n      data\r\n    } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    })\r\n\r\n    return gifs\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n  return (\r\n    <div div className = 'card animate__animated animate__fadeIn' >\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hook/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n    <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n    {loading && <p className='animate__animated animate__falash'>Loading</p>}\r\n\r\n    <div className='card-grid'>\r\n        {images.map(img => (\r\n          <GifGridItem\r\n            key={img.id}\r\n            {...img}\r\n          />\r\n        ))}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\n  export const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n      getGifs(category)\r\n        .then(imgs => {\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          })\r\n        })\r\n    }, [category])\r\n\r\n\r\n    return state // {data:[], loading: true}\r\n  }\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  return (\r\n    <>\r\n     <h2>GifExpertApp</h2>\r\n     < AddCategory setCategories={setCategories}/ >\r\n     <hr/>\r\n\r\n\r\n\r\n    <ol>\r\n      {\r\n        categories.map( category => (\r\n          < GifGrid\r\n          key={category}\r\n          category={category}\r\n          />\r\n        ) )\r\n      }\r\n    </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    < GifExpertApp / >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}